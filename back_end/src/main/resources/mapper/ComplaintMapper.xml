<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.model.mapper.ComplaintMapper">
    <resultMap id="ComplaintResult" type="com.example.entity.request.Complaint">
        <id property="complaintId" column="complaint_id"/>
        <result property="complaintZt" column="complaint_complaintzt"/>
        <result property="complaintReceptionist" column="complaint_receptionist"/>
        <result property="complaintClassification" column="complaint_classification"/>
        <result property="complaintDescribe" column="complaint_describe"/>
        <result property="complaintData" column="complaint_data"/>
        <result property="complaintComplainants" column="complaint_complainants"/>
        <result property="complaintUrgent" column="complaint_urgent"/>
        <result property="complaintHandle" column="complaint_handle"/>
        <result property="complaintHandlegc" column="complaint_handlegc"/>
        <result property="complaintCustomerfk" column="complaint_customerfk"/>
        <result property="complaintHfvisit" column="complaint_hfvisit"/>
        <result property="cusId" column="cus_id"/>
        <result property="empId" column="emp_id"/>
    </resultMap>

    <resultMap id="ComplaintDetailResult" type="com.example.entity.request.Complaint">
        <id property="complaintId" column="complaint_id"/>
        <result property="complaintZt" column="complaint_complaintzt"/>
        <result property="complaintReceptionist" column="complaint_receptionist"/>
        <result property="complaintClassification" column="complaint_classification"/>
        <result property="complaintDescribe" column="complaint_describe"/>
        <result property="complaintData" column="complaint_data"/>
        <result property="complaintComplainants" column="complaint_complainants"/>
        <result property="complaintUrgent" column="complaint_urgent"/>
        <result property="complaintHandle" column="complaint_handle"/>
        <result property="complaintHandlegc" column="complaint_handlegc"/>
        <result property="complaintCustomerfk" column="complaint_customerfk"/>
        <result property="complaintHfvisit" column="complaint_hfvisit"/>
        <result property="empId" column="emp_id"/>
        <result property="cusId" column="cus_id"/>
        <association property="customerResp" resultMap="CustomerResult"/>
        <association property="empResp" resultMap="EmpResult"/>
    </resultMap>

    <resultMap id="EmpResult" type="com.example.entity.response.EmpResp">
        <id property="empId" column="emp_id"/>
        <result property="empName" column="emp_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="email" column="email"/>
        <result property="sex" column="sex"/>
        <result property="passWord" column="password"/>
        <result property="phone" column="phone"/>
        <result property="empStatus" column="emp_status"/>
        <result property="token" column="token"/>
        <result property="remark" column="remark"/>
        <result property="version" column="version"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="isDelete" column="is_delete"/>
    </resultMap>

    <resultMap id="CustomerResult" type="com.example.entity.response.CustomerResp">
        <id column="cus_id" property="cusId"/>
        <result column="cus_name" property="cusName"/>
        <result column="life_cycle" property="lifeCycle"/>
        <result column="first_signing_time" property="firstSigningTime"/>
        <result column="abbreviation" property="abbreviation"/>
        <result column="credit" property="credit"/>
        <result column="settlement" property="settlement"/>
        <result column="company_account" property="companyAccount"/>
        <result column="province" property="province"/>
        <result column="city" property="city"/>
        <result column="detail_address" property="detailAddress"/>
        <result column="cus_remark" property="cusRemark"/>
        <result column="version" property="version"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="is_delete" property="isDelete"/>
        <result column="cus_dict_source" property="cusDictSource"/>
        <result column="cus_dict_stage" property="cusDictStage"/>
        <result column="qualitative_id" property="qualitativeId"/>
        <result column="grading_id" property="gradingId"/>
        <result column="ration_id" property="rationId"/>
        <result column="emp_id" property="empId"/>
    </resultMap>

    <insert id="addComplaint" parameterType="com.example.entity.request.Complaint">
        <selectKey keyProperty="complaintId" keyColumn="complaint_id" resultType="Integer" order="AFTER">
            SELECT last_insert_id();
        </selectKey>
        insert into complaint(complaint_complaintzt,complaint_receptionist,complaint_classification,complaint_describe,complaint_data,complaint_complainants,complaint_urgent,complaint_handle,complaint_handlegc,complaint_customerfk,complaint_hfvisit,cus_id,emp_id) VALUES
        (#{complaintZt},#{complaintReceptionist},#{complaintClassification},#{complaintDescribe},#{complaintData},#{complaintComplainants},#{complaintUrgent},#{complaintHandle},#{complaintHandlegc},#{complaintCustomerfk},#{complaintHfvisit},#{cusId},#{empId})
    </insert>

    <update id="updateComplaint" parameterType="com.example.entity.request.Complaint">
        update complaint set complaint_data = #{complaintData}
        <if test="complaintZt !=null and complaintZt != ''">
            ,complaint_complaintzt = #{complaintZt}
        </if>
        <if test="complaintReceptionist !=null and complaintReceptionist != ''">
            ,complaint_receptionist = #{complaintReceptionist}
        </if>
        <if test="complaintClassification !=null and complaintClassification != ''">
            ,complaint_classification = #{complaintClassification}
        </if>
        <if test="complaintDescribe !=null and complaintDescribe != ''">
            ,complaint_describe = #{complaintDescribe}
        </if>
        <if test="complaintComplainants !=null and complaintComplainants != ''">
            ,complaint_complainants = #{complaintComplainants}
        </if>

        <if test="complaintUrgent !=null and complaintUrgent != ''">
            ,complaint_urgent = #{complaintUrgent}
        </if>
        <if test="complaintHandle !=null and complaintHandle != ''">
            ,complaint_handle = #{complaintHandle}
        </if>
        <if test="complaintHandlegc !=null and complaintHandlegc != ''">
            ,complaint_handlegc = #{complaintHandlegc}
        </if>
        <if test="complaintCustomerfk !=null and complaintCustomerfk != ''">
            ,complaint_customerfk = #{complaintCustomerfk}
        </if>
        <if test="complaintHfvisit !=null and complaintHfvisit != ''">
            ,complaint_hfvisit = #{complaintHfvisit}
        </if>
        <if test="empId !=null ">
            ,emp_id = #{empId}
        </if>
        where complaint_id = #{complaintId}
    </update>
    <delete id="deleteComplaint" parameterType="Integer">
        DELETE FROM complaint WHERE complaint_id = #{complaintId}
    </delete>
    <select id="listComplaint" resultMap="ComplaintDetailResult" parameterType="com.example.entity.request.Complaint">
        SELECT s.complaint_id,s.complaint_complaintzt,complaint_receptionist,complaint_classification,complaint_describe,complaint_data,complaint_complainants,complaint_urgent,complaint_handle,complaint_handlegc,complaint_customerfk,complaint_hfvisit,
        cu.*,
        e.*
        FROM complaint s
        left join customer cu on s.cus_id = cu.cus_id
        left join emp e on s.emp_id = e.emp_id
        <where>
            <if test="complaintZt != null and complaintZt != ''">
                AND complaint_complaintzt LIKE CONCAT('%',#{complaintZt},'%')
            </if>
            <if test="complaintReceptionist != null and complaintReceptionist != ''">
                AND s.complaint_receptionist LIKE CONCAT('%',#{complaintReceptionist},'%')
            </if>
            <if test="complaintClassification != null and complaintClassification != ''">
                AND s.complaint_classification LIKE CONCAT('%',#{complaintClassification},'%')
            </if>
            <if test="startDate != null and startDate != ''"><!-- 开始时间检索 -->
                AND date_format(s.complaint_data,'%y%m%d') &gt;= date_format(#{startDate},'%y%m%d')
            </if>
            <if test="endDate != null and endDate != ''"><!-- 结束时间检索 -->
                AND date_format(s.complaint_data,'%y%m%d') &lt;= date_format(#{endDate},'%y%m%d')
            </if>
            <if test="cusId != null">
                and s.cus_id=#{cusId}
            </if>
            <if test="empId != null">
                and s.emp_id=#{empId}
            </if>
        </where>
        ORDER BY s.complaint_data DESC
    </select>
    <select id="getComplaint" resultMap="ComplaintDetailResult">
        SELECT s.*,cu.*,e.*
        FROM complaint s
        LEFT JOIN customer cu ON cu.cus_id = s.cus_id
        LEFT JOIN emp e ON e.emp_id = s.emp_id
        WHERE s.complaint_id = #{complaintId}
    </select>
</mapper>